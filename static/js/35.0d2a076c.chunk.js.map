{"version":3,"file":"static/js/35.0d2a076c.chunk.js","mappings":"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","sources":["redux/selectors.jsx","webpack://react-homework-template/./src/components/ContactsForm/ContactForm.module.css?78ec","components/ContactsForm/ContactForm.jsx","webpack://react-homework-template/./src/components/ContactsList/ContactsList.module.css?d8e9","components/ContactsList/ContactsItem.jsx","components/ContactsList/ContactsList.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://react-homework-template/./src/pages/ContactPage/ContactPage.module.css?b217","pages/ContactPage/ContactPage.jsx"],"sourcesContent":["export const getContacts = state => state.contacts.items;\nexport const getContactFilter = state => state.filter.filter;\nexport const getIsLoading = state => state.contacts.isLoading;\nexport const getError = state => state.contacts.error;\n","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"ContactForm_input__rSICO\",\"label\":\"ContactForm_label__0yI1K\",\"btn\":\"ContactForm_btn__KmqvG\",\"form\":\"ContactForm_form__Vl2ry\"};","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/operations';\nimport { getContacts } from 'redux/selectors';\nimport style from './ContactForm.module.css';\n\nconst ContactForm = () => {\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const { name, number } = event.target.elements;\n    const form = event.currentTarget;\n    const filteredName = contacts.filter(contact =>\n      contact.name.includes(name.value)\n    );\n    if (filteredName.length > 0) {\n      alert(`${filteredName[0].name} is already in contacts.`);\n      form.reset();\n      return;\n    }\n\n    const contact = {\n      name: name.value,\n      number: number.value,\n    };\n    dispatch(addContact(contact));\n    form.reset();\n  };\n\n  return (\n    <form className={style.form} onSubmit={e => handleSubmit(e)}>\n      <label className={style.label}>Name</label>\n      <input\n        type=\"text\"\n        name=\"name\"\n        className={style.input}\n        placeholder=\"Add a name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n      />\n\n      <label className={style.label}>Number</label>\n      <input\n        type=\"tel\"\n        name=\"number\"\n        className={style.input}\n        placeholder=\"Add a number\"\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n      />\n\n      <button type=\"submit\" className={style.btn}>\n        Add\n      </button>\n    </form>\n  );\n};\nexport default ContactForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"li\":\"ContactsList_li__eda66\",\"btn\":\"ContactsList_btn__GccuV\"};","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { deleteContact } from 'redux/operations';\nimport style from './ContactsList.module.css';\n\nconst ContactItem = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n\n  return (\n    <li className={style.item}>\n      {name} : {number}\n      <button className={style.btn} onClick={() => dispatch(deleteContact(id))}>\n        Delete\n      </button>\n    </li>\n  );\n};\n\nContactItem.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n  handleDeleteClick: PropTypes.func,\n};\n\nexport default ContactItem;\n","import React from 'react';\nimport ContactItem from './ContactsItem';\nimport Loader from 'components/Loader/Loader';\nimport PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\nimport {\n  getContactFilter,\n  getContacts,\n  getIsLoading,\n  getError,\n} from 'redux/selectors';\nimport { useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport { fetchContacts } from 'redux/operations';\n\nconst ContactList = () => {\n  const contacts = useSelector(getContacts);\n  const filterValue = useSelector(getContactFilter);\n  const isLoading = useSelector(getIsLoading);\n  const error = useSelector(getError);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const getVisibilityContacts = () => {\n    if (!filterValue || filterValue === '') {\n      return contacts;\n    }\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filterValue)\n    );\n  };\n\n  const filteredContacts = getVisibilityContacts();\n\n  return (\n    <ul>\n      {isLoading && !error && <Loader />}\n      {filteredContacts.map(contact => (\n        <ContactItem\n          id={contact.id}\n          key={contact.id}\n          name={contact.name}\n          number={contact.number}\n        />\n      ))}\n    </ul>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n};\n\nexport default ContactList;\n","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"Filter_input__N7T3z\",\"label\":\"Filter_label__vEd1E\",\"filter\":\"Filter_filter__vxThR\"};","import React from 'react';\nimport style from './Filter.module.css';\nimport PropTypes from 'prop-types';\nimport { getContactFilter } from 'redux/selectors';\nimport { setContactFilter } from 'redux/filterSlice';\nimport { useDispatch } from 'react-redux';\nimport { useSelector } from 'react-redux';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(getContactFilter);\n\n  return (\n    <div className={style.filter}>\n      <label className={style.label}>Find contacts by name</label>\n      <input\n        className={style.input}\n        name=\"filter\"\n        type=\"text\"\n        id=\"filter\"\n        value={filter}\n        onChange={e => dispatch(setContactFilter(e.currentTarget.value))}\n      />\n    </div>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  filter: PropTypes.func,\n};\n\nexport default Filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"ContactWrapper\":\"ContactPage_ContactWrapper__dDYcQ\"};","import ContactForm from '../../components/ContactsForm/ContactForm';\nimport ContactList from '../../components/ContactsList/ContactsList';\nimport Filter from '../../components/Filter/Filter';\nimport style from './ContactPage.module.css';\n\nconst ContactPage = () => {\n  return (\n    <div className={style.ContactWrapper}>\n      <ContactForm />\n      <Filter />\n      <ContactList />\n    </div>\n  );\n};\n\nexport default ContactPage;\n"],"names":["getContacts","state","contacts","items","getContactFilter","filter","getIsLoading","isLoading","getError","error","useSelector","dispatch","useDispatch","className","style","onSubmit","e","event","preventDefault","target","elements","name","number","form","currentTarget","filteredName","contact","includes","value","length","alert","reset","addContact","handleSubmit","type","placeholder","pattern","title","required","id","onClick","deleteContact","filterValue","useEffect","fetchContacts","filteredContacts","toLowerCase","Loader","map","onChange","setContactFilter"],"sourceRoot":""}