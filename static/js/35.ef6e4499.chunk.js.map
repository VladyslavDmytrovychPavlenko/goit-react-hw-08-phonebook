{"version":3,"file":"static/js/35.ef6e4499.chunk.js","mappings":"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","sources":["redux/selectors.jsx","webpack://react-homework-template/./src/components/ContactsForm/ContactForm.module.css?78ec","components/ContactsForm/ContactForm.jsx","webpack://react-homework-template/./src/components/ContactsList/ContactsList.module.css?d8e9","components/ContactsList/ContactsItem.jsx","components/ContactsList/ContactsList.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://react-homework-template/./src/pages/ContactPage/ContactPage.module.css?b217","pages/ContactPage/ContactPage.jsx"],"sourcesContent":["export const getContacts = state => state.contacts.items;\nexport const getContactFilter = state => state.filter.filter;\nexport const getIsLoading = state => state.contacts.isLoading;\nexport const getError = state => state.contacts.error;\n","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"ContactForm_input__rSICO\",\"label\":\"ContactForm_label__0yI1K\",\"btn\":\"ContactForm_btn__KmqvG\",\"form\":\"ContactForm_form__Vl2ry\"};","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/operations';\nimport { getContacts } from 'redux/selectors';\nimport style from './ContactForm.module.css';\n\nconst ContactForm = () => {\n  const [name, setName] = useState('');\n  const [phone, setNumber] = useState('');\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const normalizedFind = name.toLowerCase();\n    const existingContact = contacts.find(\n      contact => contact.name.toLowerCase() === normalizedFind\n    );\n\n    if (existingContact) {\n      return alert(`${name} is already in contacts.`);\n    }\n\n    if (name && phone) {\n      dispatch(addContact({ name, phone }));\n      resetForm();\n    }\n  };\n\n  const resetForm = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={style.form} onSubmit={handleSubmit}>\n      <label className={style.label}>Name</label>\n      <input\n        type=\"text\"\n        name=\"name\"\n        className={style.input}\n        placeholder=\"Add a name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        value={name}\n        onChange={event => setName(event.target.value)}\n      />\n\n      <label className={style.label}>Number</label>\n      <input\n        type=\"tel\"\n        name=\"phone\"\n        className={style.input}\n        placeholder=\"Add a number\"\n        pattern=\"[0-9+\\-()\\s]+\"\n        value={phone}\n        onChange={event => {\n          const sanitizedValue = event.target.value.replace(\n            /[^0-9+\\-()\\s]/g,\n            ''\n          );\n          setNumber(sanitizedValue);\n        }}\n      />\n\n      <button type=\"submit\" className={style.btn}>\n        Add\n      </button>\n    </form>\n  );\n};\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func,\n};\n\nexport default ContactForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"li\":\"ContactsList_li__eda66\",\"btn\":\"ContactsList_btn__GccuV\"};","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { deleteContact } from 'redux/operations';\nimport style from './ContactsList.module.css';\n\nconst ContactItem = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n\n  return (\n    <li className={style.item}>\n      {name} : {number}\n      <button className={style.btn} onClick={() => dispatch(deleteContact(id))}>\n        Delete\n      </button>\n    </li>\n  );\n};\n\nContactItem.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n  handleDeleteClick: PropTypes.func,\n};\n\nexport default ContactItem;\n","import React from 'react';\nimport ContactItem from './ContactsItem';\nimport Loader from 'components/Loader/Loader';\nimport PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\nimport {\n  getContactFilter,\n  getContacts,\n  getIsLoading,\n  getError,\n} from 'redux/selectors';\nimport { useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport { fetchContacts } from 'redux/operations';\n\nconst ContactList = () => {\n  const contacts = useSelector(getContacts);\n  const filterValue = useSelector(getContactFilter);\n  const isLoading = useSelector(getIsLoading);\n  const error = useSelector(getError);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const getVisibilityContacts = () => {\n    if (!filterValue || filterValue === '') {\n      return contacts;\n    }\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filterValue)\n    );\n  };\n\n  const filteredContacts = getVisibilityContacts();\n\n  return (\n    <ul>\n      {isLoading && !error && <Loader />}\n      {filteredContacts.map(contact => (\n        <ContactItem\n          id={contact.id}\n          key={contact.id}\n          name={contact.name}\n          number={contact.phone}\n        />\n      ))}\n    </ul>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n};\n\nexport default ContactList;\n","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"Filter_input__N7T3z\",\"label\":\"Filter_label__vEd1E\",\"filter\":\"Filter_filter__vxThR\"};","import React from 'react';\nimport style from './Filter.module.css';\nimport PropTypes from 'prop-types';\nimport { getContactFilter } from 'redux/selectors';\nimport { setContactFilter } from 'redux/filterSlice';\nimport { useDispatch } from 'react-redux';\nimport { useSelector } from 'react-redux';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(getContactFilter);\n\n  return (\n    <div className={style.filter}>\n      <label className={style.label}>Find contacts by name</label>\n      <input\n        className={style.input}\n        name=\"filter\"\n        type=\"text\"\n        id=\"filter\"\n        value={filter}\n        onChange={e => dispatch(setContactFilter(e.currentTarget.value))}\n      />\n    </div>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  filter: PropTypes.func,\n};\n\nexport default Filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"ContactWrapper\":\"ContactPage_ContactWrapper__dDYcQ\"};","import ContactForm from '../../components/ContactsForm/ContactForm';\nimport ContactList from '../../components/ContactsList/ContactsList';\nimport Filter from '../../components/Filter/Filter';\nimport style from './ContactPage.module.css';\n\nconst ContactPage = () => {\n  return (\n    <div className={style.ContactWrapper}>\n      <ContactForm />\n      <Filter />\n      <ContactList />\n    </div>\n  );\n};\n\nexport default ContactPage;\n"],"names":["getContacts","state","contacts","items","getContactFilter","filter","getIsLoading","isLoading","getError","error","useState","name","setName","phone","setNumber","useSelector","dispatch","useDispatch","resetForm","className","style","onSubmit","event","preventDefault","normalizedFind","toLowerCase","find","contact","alert","addContact","type","placeholder","pattern","value","onChange","target","sanitizedValue","replace","id","number","onClick","deleteContact","filterValue","useEffect","fetchContacts","filteredContacts","includes","Loader","map","e","setContactFilter","currentTarget"],"sourceRoot":""}